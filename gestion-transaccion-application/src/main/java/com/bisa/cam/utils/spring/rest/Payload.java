package com.bisa.cam.utils.spring.rest;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

import java.time.LocalDateTime;
import java.util.Objects;
import java.util.StringJoiner;
import java.util.UUID;

public class Payload<T> {
    @JsonInclude(JsonInclude.Include.NON_NULL)
    final UUID uuid;

    @JsonProperty
    @JsonInclude(JsonInclude.Include.NON_NULL)
    final LocalDateTime timestamp;

    /**
     * The data.
     */
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private final T data;

    // region Constructor, getters, equals, hashCode, toString -- generated by BoB the Builder of Beans
    // The code below has been generated by BoB the Builder of Beans based on the class' fields.
    // Everything after this comment will be regenerated if you invoke BoB again.
    // If you don't know who BoB is, you can find him here: https://bitbucket.org/atlassianlabs/bob-the-builder-of-beans

    @JsonCreator
    public Payload(@JsonProperty("uuid") UUID uuid, @JsonProperty("timestamp") LocalDateTime timestamp, @JsonProperty("data") T data) {
        this.uuid = uuid;
        this.timestamp = timestamp;
        this.data = data;
    }

    // region Getters -- generated by BoB the Builder of Beans
    public UUID getUuid() {
        return uuid;
    }

    public LocalDateTime getTimestamp() {
        return timestamp;
    }

    public T getData() {
        return data;
    }// endregion Getters

    // region hashCode() and equals() -- generated by BoB the Builder of Beans
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        Payload that = (Payload) o;

        return Objects.equals(this.getUuid(), that.getUuid()) && Objects.equals(this.getTimestamp(), that.getTimestamp()) && Objects.equals(this.getData(), that.getData());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getUuid(), getTimestamp(), getData());
    }

    @Override
    public String toString() {
        return new StringJoiner(", ", this.getClass().getSimpleName() + "[", "]")
                .add("uuid=" + getUuid()).add("timestamp=" + getTimestamp()).add("data=" + getData()).toString();
    }// endregion hashCode() and equals()

    public static PayloadBuilder builder() {
        return new PayloadBuilder();
    }

    public static final class PayloadBuilder<T> {
        UUID uuid;
        LocalDateTime timestamp;
        private T data;

        private PayloadBuilder() {
        }

        public PayloadBuilder withUuid(UUID uuid) {
            this.uuid = uuid;
            return this;
        }

        public PayloadBuilder withTimestamp(LocalDateTime timestamp) {
            this.timestamp = timestamp;
            return this;
        }

        public PayloadBuilder withData(T data) {
            this.data = data;
            return this;
        }

        public Payload build() {
            return new Payload(uuid, timestamp, data);
        }
    }
    // endregion Constructor, getters, equals, hashCode, toString

}
