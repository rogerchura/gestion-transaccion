package com.bisa.cam.utils.spring.rest;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

import java.time.LocalDateTime;
import java.util.*;

public class ErrorCollectionPayload<C> extends ErrorPayload<C> {

    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    final Collection<ErrorPayload<?>> errors;


    // region Constructor, getters, equals, hashCode, toString, builder -- generated by BoB the Builder of Beans
    // The code below has been generated by BoB the Builder of Beans based on the class' fields.
    // Everything after this comment will be regenerated if you invoke BoB again.
    // If you don't know who BoB is, you can find him here: https://bitbucket.org/atlassianlabs/bob-the-builder-of-beans

    public ErrorCollectionPayload(C code, String message, ErrorPayload<?>... errors) {
        this(code, message, Arrays.asList(errors));
    }

    @JsonCreator
    public ErrorCollectionPayload(@JsonProperty("code") C code, @JsonProperty("message") String message
            , @JsonProperty("errors") Collection<ErrorPayload<?>> errors) {
        super(code, message);
        this.errors = Objects.requireNonNull(errors);
    }

    @JsonCreator
    public ErrorCollectionPayload(@JsonProperty("errors") Collection<ErrorPayload<?>> errors
            , @JsonProperty("code") C code, @JsonProperty("message") String message
            , @JsonProperty("field") String field, @JsonProperty("uuid") UUID uuid, @JsonProperty("timestamp") LocalDateTime timestamp) {
        super(code, message, field, uuid, timestamp);
        this.errors = errors;
    }

    // region Getters -- generated by BoB the Builder of Beans
    public Collection<ErrorPayload<?>> getErrors() {
        return errors;
    }// endregion Getters

    // region hashCode() and equals() -- generated by BoB the Builder of Beans
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        ErrorCollectionPayload that = (ErrorCollectionPayload) o;

        return Objects.equals(this.getErrors(), that.getErrors()) && Objects.equals(this.getCode(), that.getCode()) && Objects.equals(this.getMessage(), that.getMessage()) && Objects.equals(this.getField(), that.getField()) && Objects.equals(this.getUuid(), that.getUuid()) && Objects.equals(this.getTimestamp(), that.getTimestamp()) && Objects.equals(this.getData(), that.getData());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getErrors(), getCode(), getMessage(), getField(), getUuid(), getTimestamp(), getData());
    }

    @Override
    public String toString() {
        return new StringJoiner(", ", this.getClass().getSimpleName() + "[", "]")
                .add("errors=" + getErrors()).add("code=" + getCode()).add("message=" + getMessage()).add("field=" + getField()).add("uuid=" + getUuid()).add("timestamp=" + getTimestamp()).add("data=" + getData()).toString();
    }// endregion hashCode() and equals()

    // endregion Constructor, getters, equals, hashCode, toString, builder
}
