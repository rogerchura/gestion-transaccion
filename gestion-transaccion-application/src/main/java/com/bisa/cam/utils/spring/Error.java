package com.bisa.cam.utils.spring;

import com.bisa.cam.utils.lang.Strings;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.time.Instant;
import java.util.Objects;
import java.util.StringJoiner;

@JsonPropertyOrder({"code", "field", "message", "timestamp"})
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class Error<T> {

    /**
     * The code.
     */
    private final String code;

    /**
     * The message.
     */
    private final String message;

    /**
     * A possible related field
     */
    private final String field;

    /**
     * A possible related field
     */
    private final Long timestamp;


    // region Constructor, getters, equals, hashCode, toString, builder -- generated by BoB the Builder of Beans
    // The code below has been generated by BoB the Builder of Beans based on the class' fields.
    // Everything after this comment will be regenerated if you invoke BoB again.
    // If you don't know who BoB is, you can find him here: https://bitbucket.org/atlassianlabs/bob-the-builder-of-beans

    public Error(String code, String message) {
        this(code, message, null);
    }

    public Error(String code, String message, String field) {
        this(code, message, field, null);
    }

    public Error(@JsonProperty("code") String code, @JsonProperty("message") String message,
                 @JsonProperty("field") String field, @JsonProperty("timestamp") Long timestamp) {
        this.code = code;
        this.message = message;
        this.field = field;
        this.timestamp = timestamp;
    }

    // region Getters -- generated by BoB the Builder of Beans
    public String getCode() {
        return code;
    }

    public String getMessage() {
        return message;
    }

    public String getField() {
        return field;
    }

    public Long getTimestamp() {
        return timestamp;
    }

    // endregion Getters

    // region hashCode() and equals() -- generated by BoB the Builder of Beans
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        Error that = (Error) o;

        return Objects.equals(this.getCode(), that.getCode()) && Objects.equals(this.getMessage(), that.getMessage()) && Objects.equals(this.getField(), that.getField()) && Objects.equals(this.getTimestamp(), that.getTimestamp());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getCode(), getMessage(), getField(), getTimestamp());
    }

    @Override
    public String toString() {
        return new StringJoiner(", ", this.getClass().getSimpleName() + "[", "]")
                .add("code=" + getCode()).add("message=" + getMessage()).add("field=" + getField()).add("timestamp=" + getTimestamp()).toString();
    }// endregion hashCode() and equals()

    public static Error of(Exception e) {
        return new Error(e.getClass().getSimpleName(), e.getMessage());
    }

    public static Error of(Throwable e) {
        return new Error(e.getClass().getSimpleName(), e.getMessage());
    }

    public static ErrorBuilder builder() {
        return new ErrorBuilder();
    }

    public static final class ErrorBuilder {
        private String code;
        private String message;
        private String field;
        private Instant timestamp;

        private ErrorBuilder() {
        }

        public ErrorBuilder withCode(String code) {
            this.code = code;
            return this;
        }

        public ErrorBuilder withMessage(String message) {
            this.message = message;
            return this;
        }

        public ErrorBuilder withMessage(String message, Object... messageParams) {
            this.message = Strings.arrange(message, messageParams);
            return this;
        }

        public ErrorBuilder withField(String field) {
            this.field = field;
            return this;
        }

        public ErrorBuilder withTimestamp(Instant timestamp) {
            this.timestamp = timestamp;
            return this;
        }

        public Error build() {
            return toUnixTimeMillis();
        }

        /*public Error toISO8601(boolean useUTC) {
            if (timestamp != null)
                return new Error(code, message, field,
                        useUTC ? Temporals.toUTCDateTime(timestamp.toEpochMilli()) : Temporals.toLocalDateTime(timestamp.toEpochMilli()));
            return new Error(code, message, field, (LocalDateTime) null);
        }*/

        public Error toUnixTimeMillis() {
            if (timestamp != null) return new Error(code, message, field, timestamp.toEpochMilli());
            return new Error(code, message, field, null);
        }
    }
}
